<?php
/**
 * 深度优先算法 - 邻接矩阵遍历
 *
 * Created At 2018/8/8.
 * User: kaiyanh <nzing@aweb.cc>
 */

$book = []; // 哪些点已经访问
$sum = 1; // 已经访问过多少顶点
$n = 5; //顶点总数

// 图的边（邻接矩阵）99999-无穷大
$map = [
    [0, 1, 1, 99999, 1],
    [1, 0, 99999, 1, 99999],
    [1, 99999, 0, 99999, 1],
    [99999, 1, 99999, 0, 99999],
    [1, 99999, 1, 99999, 0],
];

/**
 * 图遍历
 *
 * @param integer $cur 当前所在顶点编号
 */
function dfs(int $cur)
{
    global $sum, $n, $map, $book;
    printf("%d \n", $cur);
    if ($sum == $n) {
        return ; // 所用顶点都已经访问过，直接退出
    }
    $sum++; // 每访问一个顶点，sum加1
    // 从1号顶点到n号顶点依次尝试，看哪些顶点与当前顶点$cur有边相连
    for ($i =1; $i <= $n; $i++) {
        if ($map[$cur-1][$i-1] == 1 && $book[$i] == 0) {
            $book[$i] =1;
            dfs($i);
        }
    }
    return;
}

// 开始运行
for($i = 1; $i <= $n; $i++) {
    $book[$i] = 0;
}
$book[1] =1; //标记1号顶点已经访问
dfs(1); // 从一号顶点开始遍历